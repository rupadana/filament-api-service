<?php

namespace {{ handlersVirtualNamespace }};

use {{ resource }};
use {{ realResource }} as {{ handlerName }}Real;

use OpenApi\Attributes as OAT;
use Rupadana\ApiService\ApiService;

$panel = filament()->getCurrentPanel();

$panelId = $panel->getId();
$panelPath = $panel->getPath();
$hasTenancy = $panel->hasTenancy();
$tenantSlugAttribute = $panel->getTenantSlugAttribute();
$panelPrefix = app(ApiService::class)->isRoutePrefixedByPanel() ? $panelPath ?? $panelId : '';

if (
    ApiService::isTenancyEnabled() &&
    ApiService::tenancyAwareness() &&
    app({{ resourceClass }}::class)->isScopedToTenant()
) {
    defined("TENANT_AWARENESS_{{ capitalsResource }}") ?: define("TENANT_AWARENESS_{{ capitalsResource }}", true);
} else {
    defined("TENANT_AWARENESS_{{ capitalsResource }}") ?: define("TENANT_AWARENESS_{{ capitalsResource }}", false);
}

if ({{ handlerName }}Real::isPublic()) {
    defined("RESOURCE_PUBLIC_{{ capitalsResource }}_CREATE") ?: define("RESOURCE_PUBLIC_{{ capitalsResource }}_CREATE", true);
} else {
    defined("RESOURCE_PUBLIC_{{ capitalsResource }}_CREATE") ?: define("RESOURCE_PUBLIC_{{ capitalsResource }}_CREATE", false);
}

$transformers = {{ handlerName }}Real::getApiTransformers();
$custom_transformers = count(array_except($transformers, ['default']));
defined("RESOURCE_{{ capitalsResource }}_CREATE_CUSTOM_TRANSFORMERS") ?: define("RESOURCE_{{ capitalsResource }}_CREATE_CUSTOM_TRANSFORMERS", $custom_transformers ?? 0);

defined("PANEL_PREFIX_{{ capitalsResource }}_CREATE") ?: define("PANEL_PREFIX_{{ capitalsResource }}_CREATE", $panelPrefix);
defined("BASE_URL") ?: define("BASE_URL", config('app.url'));

#[OAT\Post(
    path: "{{ path }}",
    operationId: "store{{ modelClass }}",
    tags: ["{{ pluralClass }}"],
    summary: "Store new {{ modelClass }}",
    description: "Returns inserted {{ modelClass }} data",
    servers: [
        (TENANT_AWARENESS_{{ capitalsResource }}) ?
            new OAT\Server(
                description: "API Server Filament Panel",
                url: BASE_URL . "/api/{panel}" . PANEL_PREFIX_{{ capitalsResource }}_CREATE . "/{tenant}",
                variables: [
                    new OAT\ServerVariable(
                        serverVariable: "panel",
                        description: "Select the Filament Panel",
                        enum: PANEL_ENUMS,
                        default: PANEL_ENUMS[0]
                    ),
                    new OAT\ServerVariable(
                        serverVariable: "tenant",
                        description: 'ID of the tenant',
                        default: ""
                    ),

                ]
            ) :
            new OAT\Server(
                description: "API Server Filament Panel",
                url: BASE_URL . "/api/" . PANEL_PREFIX_{{ capitalsResource }}_CREATE . "/",
            )
    ],
    security: (!RESOURCE_PUBLIC_{{ capitalsResource }}_CREATE) ?  [["bearerAuth" => []]] : null,
    parameters: [
        // (TENANT_AWARENESS_{{ capitalsResource }}) ? new OAT\Parameter(ref: "#/components/parameters/tenant") : null,
    ],
    requestBody: new OAT\RequestBody(
        required: true,
        content: (RESOURCE_{{ capitalsResource }}_CREATE_CUSTOM_TRANSFORMERS > 0) ?
            new OAT\JsonContent(
                oneOf: [
                    new OAT\Schema(ref: "#/components/schemas/{{ modelClass }}Transformer/properties/data"),
                    new OAT\Schema(ref: "#/components/schemas/DefaultTransformer/properties/data"),
                ]) :
            new OAT\JsonContent(ref: "#/components/schemas/DefaultTransformer/properties/data")
    ),
    responses: [
        new OAT\Response(response: 200, description: 'Operation succesful', content: new OAT\JsonContent(type: "object", properties: [
            new OAT\Property(property: "message", type: "string", example: "Successfully Inserted Resource"),
            (RESOURCE_{{ capitalsResource }}_CREATE_CUSTOM_TRANSFORMERS > 0) ?
                new OAT\Property(property: "data", type: "object", oneOf: [
                    new OAT\Schema(ref: "#/components/schemas/{{ modelClass }}Transformer/properties/data"),
                    new OAT\Schema(ref: "#/components/schemas/DefaultTransformer/properties/data")
                ]) :
                new OAT\Property(property: "data", type: "object", ref: "#/components/schemas/DefaultTransformer/properties/data")
        ])),
        new OAT\Response(response: 400, description: 'Bad Request'),
        new OAT\Response(response: 401, description: 'Unauthenticated'),
        new OAT\Response(response: 403, description: 'Forbidden'),
        new OAT\Response(response: 404, description: 'Resource not Found'),
    ]
)]

class {{ handlerName }} extends {{ handlerName }}Real {}
